import subprocess, shutil

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏ä‡πá‡∏Ñ-‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ollama CLI ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• gemma3:latest
def ensure_ollama_gemma():
    # ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ollama CLI ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ (Linux install script)
    if shutil.which("ollama") is None:
        subprocess.run("curl -fsSL https://ollama.com/install/linux | sh", shell=True, check=True)
    # ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    result = subprocess.run(["ollama", "list"], capture_output=True, text=True)
    # ‡∏î‡∏∂‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏• gemma3:latest ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà
    if "gemma3:latest" not in result.stdout:
        subprocess.run(["ollama", "pull", "gemma3:latest"], check=True)

class PromptExtraNode:
    CATEGORY = "Storyboard"

    @classmethod
    def INPUT_TYPES(cls):
        return {
            "required": {
                "text": ("STRING", {"default": "", "multiline": True}),
            }
        }

    RETURN_TYPES = ("STRING",)
    RETURN_NAMES = ("text",)
    FUNCTION = "pass_text"
    OUTPUT_NODE = False

    def __init__(self):
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ollama+gemma3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
        ensure_ollama_gemma()

    def pass_text(self, text):
        # ‡∏£‡∏±‡∏ô gemma3:latest ‡∏ú‡πà‡∏≤‡∏ô CLI ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        proc = subprocess.run(
            ["ollama", "run", "gemma3:latest", "--no-stream", "--prompt", text],
            capture_output=True, text=True
        )
        output = proc.stdout.strip()
        return (output,)

print("üì¶ prompt_extra_node module loaded")
NODE_CLASS_MAPPINGS = {"PromptExtraNode": PromptExtraNode}
NODE_DISPLAY_NAME_MAPPINGS = {"PromptExtraNode": "Prompt extra"}
print("‚úÖ NODE_CLASS_MAPPINGS defined")
