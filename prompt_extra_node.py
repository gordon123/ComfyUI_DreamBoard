# prompt_extra_node.py
import subprocess, shutil

def ensure_ollama_gemma():
    # à¸•à¸´à¸”à¸•à¸±à¹‰à¸‡ ollama CLI à¸–à¹‰à¸²à¹„à¸¡à¹ˆà¸¡à¸µ
    if shutil.which("ollama") is None:
        subprocess.run(["pip", "install", "ollama"], check=True)
    # à¸”à¸¶à¸‡à¹‚à¸¡à¹€à¸”à¸¥à¸–à¹‰à¸²à¸¢à¸±à¸‡à¹„à¸¡à¹ˆà¸¡à¸µ
    result = subprocess.run(["ollama", "list"], capture_output=True, text=True)
    if "gemma3:latest" not in result.stdout:
        subprocess.run(["ollama", "pull", "gemma3:latest"], check=True)

class PromptExtraNode:
    CATEGORY = "Storyboard"

    @classmethod
    def INPUT_TYPES(cls):
        return {
            "required": {
                "text": ("STRING", {"default": "", "multiline": True}),
            }
        }

    RETURN_TYPES = ("STRING",)
    RETURN_NAMES = ("text",)
    FUNCTION = "pass_text"
    OUTPUT_NODE = False

    def __init__(self):
        ensure_ollama_gemma()

    def pass_text(self, text):
        # à¸£à¸±à¸™ gemma3:latest à¸œà¹ˆà¸²à¸™ CLI à¸£à¸±à¸šà¸œà¸¥à¸¥à¸±à¸žà¸˜à¹Œà¹€à¸›à¹‡à¸™à¸‚à¹‰à¸­à¸„à¸§à¸²à¸¡
        proc = subprocess.run(
            ["ollama", "run", "gemma3:latest", "--no-stream", "--prompt", text],
            capture_output=True, text=True
        )
        output = proc.stdout.strip()
        return (output,)

print("ðŸ“¦ prompt_extra_node module loaded")
NODE_CLASS_MAPPINGS = {"PromptExtraNode": PromptExtraNode}
NODE_DISPLAY_NAME_MAPPINGS = {"PromptExtraNode": "Prompt extra"}
print("âœ… NODE_CLASS_MAPPINGS defined")
